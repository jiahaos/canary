<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <!-- parent 父类引用，引用父类，这里引用spring boot  -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.8.RELEASE</version>
  </parent>



  <modelVersion>4.0.0</modelVersion>

  <groupId>com.canary.framework</groupId>
  <artifactId>canary</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>

  <!-- modules 模块管理标签，标签中是maven项目的一个module模块  -->
  <modules>
    <module>jaf-consul</module>
    <module>jaf-mq-kafka</module>
    <module>jaf-context</module>
    <module>jaf-core</module>
    <module>jaf-event</module>
    <module>jaf-rds-mysql</module>
    <module>jaf-rds-redis</module>
    <module>jaf-rds-mongo</module>
    <module>jaf-tools</module>
  </modules>

  <!-- properties 属性标签，提取公共常量属性标签，可以自定义，如想引用利用${jedis.version} 方式引用  -->
  <properties>
    <java.version>1.8</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <fastjson.version>1.2.24</fastjson.version>
    <lombok.version>1.16.12</lombok.version>
    <guava.version>20.0</guava.version>
    <beanutils.version>1.9.3</beanutils.version>
    <lang3.version>3.4</lang3.version>
    <springfox-version>2.5.0</springfox-version>
    <swagger-core-version>1.5.10</swagger-core-version>
    <jedis.version>2.9.0</jedis.version>
    <dozer.version>5.5.1</dozer.version>
  </properties>

  <!-- dependencyManagement  在我们项目顶层的POM文件中，我们会看到dependencyManagement元素。通过它元素来管理jar包的版本，让子项目中引用一个依赖而不用显示的列出版本号。Maven会沿着父子层次向上走，直到找到一个拥有dependencyManagement元素的项目，然后它就会使用在这个dependencyManagement元素中指定的版本号。   -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>${jedis.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>net.sf.dozer</groupId>
        <artifactId>dozer</artifactId>
        <version>${dozer.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>${fastjson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>${beanutils.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>



  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <!-- 资源文件拷贝插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <!-- java编译插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!-- 配置Tomcat插件 -->
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat8-maven-plugin</artifactId>
          <version>2.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。-->
  <scm>
    <!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。-->
    <url>https://code.aliyun.com/jh-canary/canary.git</url>
    <!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。-->
    <connection>scm:git:https://code.aliyun.com/jh-canary/canary.git</connection>
    <!--当前代码的标签，在开发阶段默认为HEAD-->
    <tag>HEAD</tag>
  </scm>

  <profiles>
    <profile>
      <id>releases</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!--定义snapshots库和releases库的nexus地址-->
  <distributionManagement>
   <!-- <site>
      <id>website</id>
      <url>scp://webhost.company.com/www/website</url>
    </site> -->
    <repository>
      <id>nexus-releases</id>
      <name>Nexus Releases</name>
      <url>http://47.94.226.182:8081/nexus/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>nexus-snapshots</id>
      <name>Nexus Snapshots</name>
      <url>http://47.94.226.182:8081/nexus/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <name>Maven</name>
  <url>http://maven.apache.org/</url>
  <inceptionYear>2001</inceptionYear>

</project>
